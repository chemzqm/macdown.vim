#!/usr/bin/env python

from __future__ import print_function
import re
import sys
import os
import misaka as m
from pygments import highlight
from pygments.formatters import HtmlFormatter
from pygments.lexers import get_lexer_by_name

if len(sys.argv) > 1:
    title = sys.argv[1]
else:
    title = ''

toc = []

def GenereateToc():
    global toc
    if len(toc) == 0:
        return ''
    level = 0
    result = ''
    for item in toc:
        if item.level > level:
            result += '<ul>\n' * (item.level - level)
        elif iterm.level < level:
            result += '</ul>\n' * (level - item.level)
        result += '<a href={link}>{head}</a>'.format(
                link=item.link,
                head=item.content)
        level = item.level
    return result + '<\ul>\n'*result

class HighlighterRenderer(m.HtmlRenderer):

    def normal_text(self, text):
        return m.smartypants(text)

    def header(self, content, level):
        global toc
        n = str(len(toc) + 1)
        toc = toc + [{'level': level, 'content': content, 'link': 'toc_' + n}]
        return str('<h{level} id="toc_{n}">{content}</h{level}>').format(
                level=level,
                content=content,
                n=n)

    def blockcode(self, text, lang):
        lang = 'sh'
        lexer = get_lexer_by_name(lang, stripall=True)
        formatter = HtmlFormatter()

        return highlight(text, lexer, formatter)

renderer = HighlighterRenderer(('skip-html',), 6)
# http://misaka.61924.nl/#extensions
md = m.Markdown(renderer, extensions=('tables', 'strikethrough', 'math', 'fenced-code', 'footnotes', 'autolink'))

content = ''
for line in sys.stdin:
    content = content + line

with open(os.path.join(os.path.dirname(__file__), '../template/template-misaka.html'), 'r') as f:
    for line in f:
        if '${title}' in line:
            print(line.replace('${title}', title, 1), end='')
        elif '${content}' in line:
            print(line.replace('${content}', md(content), 1), end='')
        else:
            print(line, end='')
    #print(GenereateToc())
